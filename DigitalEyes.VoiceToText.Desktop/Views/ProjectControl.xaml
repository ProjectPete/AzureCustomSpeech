<UserControl x:Class="DigitalEyes.VoiceToText.Desktop.Views.ProjectControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        mc:Ignorable="d" 
        xmlns:local="clr-namespace:DigitalEyes.VoiceToText.Desktop"
        xmlns:views="clr-namespace:DigitalEyes.VoiceToText.Desktop.Views"
        xmlns:helpers="clr-namespace:DigitalEyes.VoiceToText.Desktop.Helpers"
        xmlns:naudioui="clr-namespace:NAudio.Gui;assembly=NAudio"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        d:DesignHeight="450" d:DesignWidth="800" x:Name="ctrlMain">
    <UserControl.Resources>
        <views:ListViewMaxWidthConverter x:Key="ListViewMaxWidthConverter"/>
        <views:VisibilityConverter x:Key="VisibilityConverter"/>
        <views:WidthScaleConverter x:Key="WidthScaleConverter"/>
        <views:LeftMarginConverter x:Key="LeftMarginConverter"/>
        <views:DebugConverter x:Key="DebugConverter"/>
        <views:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <views:PassSelfToDataContextHackConverter x:Key="PassSelfToDataContextHackConverter"/>
    </UserControl.Resources>
    <Grid Margin="2" Grid.Row="1">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ScrollViewer BorderThickness="1" BorderBrush="Red" >
            <Grid x:Name="InnerMaxWidthGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Expander BorderBrush="DarkGray" BorderThickness="1" Padding="4" Margin="10" Grid.Row="1" Header="Import, Export &amp; Convert Tools  (click to open/close)" IsExpanded="{Binding ShowImportSection, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}">
                    <TabControl>
                        <TabItem Header="Import new media file">
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" x:Name="ProjectControls" Grid.Row="1" Margin="10" VerticalScrollBarVisibility="Disabled">
                                <Grid HorizontalAlignment="Left">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock HorizontalAlignment="Left" Width="750" Grid.ColumnSpan="3" Text="Browse and select a media file. This feature uses NAudio media converter, so it will take most common sound files like wav &amp; mp3, or media with a sound track like mp4 &amp; m4a. If the green button is enabled, click to convert it. You must also enter/select a Speech Service endpoint. You can get these details from the Azure Portal. Click the settings button for a link explaining more." TextWrapping="Wrap"/>

                                    <StackPanel Grid.Row="1" Background="#FFEEEEEE" Margin="1" Grid.ColumnSpan="3" Orientation="Horizontal">
                                        <Button Padding="4,2" Click="btnChooseFolder" Content="Browse" Width="50" Margin="5"/>
                                        <TextBox Padding="4,2" VerticalAlignment="Center" Margin="5,0,0,0" x:Name="txtFilePath" MinWidth="200" Text="{Binding FilesFolder}"/>
                                    </StackPanel>

                                    <StackPanel Grid.Row="2" Background="#FFEEEEEE" Margin="1" HorizontalAlignment="Left" Visibility="{Binding FoundFiles, Converter={StaticResource VisibilityConverter}}">
                                        <TextBlock Text="Select a file" Width="100" HorizontalAlignment="Left"/>
                                        <ListBox Margin="3" ScrollViewer.HorizontalScrollBarVisibility="Auto" Width="250" x:Name="lstFiles" MaxHeight="140" SelectedItem="{Binding SelectedFileName}" ItemsSource="{Binding FilesFound}"/>
                                    </StackPanel>

                                    <Grid VerticalAlignment="Stretch" Background="#FFEEEEEE" Grid.Row="2" Grid.Column="1" Margin="1" Visibility="{Binding SelectedItem, ElementName=lstFiles, Converter={StaticResource NullVisibilityConverter}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <views:WaveformStatsControl DataContext="{Binding CurrentAudioVM}" Margin="3" />
                                        <Button Grid.Row="1" Padding="4,2" Margin="3" FontSize="18" FontWeight="Bold" Foreground="DarkGreen" VerticalAlignment="Bottom" IsEnabled="{Binding CanStartTranscribing}" Content="Transcribe this file" HorizontalAlignment="Stretch" Click="Transcribe_Click"/>
                                    </Grid>

                                    <Grid Background="#FFEEEEEE" Margin="1" Grid.Row="2" Grid.Column="2" Visibility="{Binding SelectedItem, ElementName=lstFiles, Converter={StaticResource NullVisibilityConverter}}" HorizontalAlignment="Left" MinWidth="300" VerticalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock FontWeight="Bold" Text="Service" VerticalAlignment="Center" Margin="2" />
                                        <ComboBox Grid.Column="1" HorizontalAlignment="Left" MinWidth="100" Margin="2" ItemsSource="{Binding TranscribeEndpointsVM.TranscribeEndpoints}" DisplayMemberPath="Name" SelectedItem="{Binding TranscribeEndpointsVM.SelectedTranscribeEndpoint, Mode=TwoWay}" />
                                        <TextBlock Grid.Row="1" Text="Name" VerticalAlignment="Center" Margin="2" />
                                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding TranscribeEndpointsVM.SelectedTranscribeEndpoint.Name}" Margin="2"/>
                                        <ToggleButton Grid.Row="2" IsChecked="False" x:Name="ShowKey" Content="Show Key" HorizontalAlignment="Left" />
                                        <TextBox Grid.Row="2" Grid.Column="1" Visibility="{Binding IsChecked, ElementName=ShowKey, Converter={StaticResource VisibilityConverter}}" Text="{Binding TranscribeEndpointsVM.SelectedTranscribeEndpoint.Key}" Margin="2"/>
                                        <TextBlock Grid.Row="3" Text="Region" VerticalAlignment="Center" Margin="2" />
                                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding TranscribeEndpointsVM.SelectedTranscribeEndpoint.Region}" Margin="2"/>
                                        <TextBlock Grid.Row="4" Text="Endpoint" VerticalAlignment="Center" Margin="2" />
                                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding TranscribeEndpointsVM.SelectedTranscribeEndpoint.Endpoint}" Margin="2"/>
                                        <UniformGrid HorizontalAlignment="Right" Rows="1" Grid.Row="5" Grid.ColumnSpan="2" Margin="4">
                                            <Button Grid.Row="5" Grid.Column="1" HorizontalAlignment="Center" Padding="4,2" Margin="2" Content="Update" Width="60" Command="{Binding TranscribeEndpointsVM.UpdateConfigCommand}" />
                                            <Button Grid.Row="5" Grid.Column="1" HorizontalAlignment="Center" Padding="4,2" Margin="2" Content="Delete" Width="60" Command="{Binding TranscribeEndpointsVM.DeleteConfigCommand}" />
                                            <Button Grid.Row="5" Grid.Column="1" HorizontalAlignment="Center" Padding="4,2" Margin="2" Content="Add" Width="60" Command="{Binding TranscribeEndpointsVM.NewConfigSaveCommand}" />
                                        </UniformGrid>
                                    </Grid>
                                </Grid>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Upload custom Voice">
                            <StackPanel>
                                <TextBlock Margin="4" Text="This feature will convert the tracks below in part or whole, into the zipped audio snippets and text index file that are required for the Azure Custom Voice service. Click the button and chose the type of export. Then you will be given an option to open the export folder, so you can upload them into the service." TextWrapping="Wrap"/>
                                <Button Margin="10" Content="Export for Azure" Command="{Binding GenerateCustomArtefactsCommand}" HorizontalAlignment="Left" Padding="8,4" />
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Convert text to voice">
                            <StackPanel>
                                <TextBlock Margin="4" Text="This feature will convert any OPEN snippets below, into speech, using the endpoint chosen (standard or custom)." TextWrapping="Wrap"/>
                                <Grid Background="#FFEEEEEE" Margin="10" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" MinWidth="300" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock FontWeight="Bold" Text="Voice" VerticalAlignment="Center" Margin="2" />
                                    <ComboBox Grid.Column="1" HorizontalAlignment="Left" MinWidth="100" Margin="2" ItemsSource="{Binding VoiceEndpointsVM.VoiceEndpoints}" DisplayMemberPath="Name" SelectedItem="{Binding VoiceEndpointsVM.SelectedVoiceEndpoint, Mode=TwoWay}" />
                                    <TextBlock Grid.Row="1" Text="Name" VerticalAlignment="Center" Margin="2" />
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding VoiceEndpointsVM.SelectedVoiceEndpoint.Name}" Margin="2"/>
                                    <TextBlock Grid.Row="2" Text="Key" VerticalAlignment="Center" Margin="2" />
                                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding VoiceEndpointsVM.SelectedVoiceEndpoint.Key}" Margin="2"/>
                                    <TextBlock Grid.Row="3" Text="Region" VerticalAlignment="Center" Margin="2" />
                                    <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding VoiceEndpointsVM.SelectedVoiceEndpoint.Region}" Margin="2"/>
                                    <TextBlock Grid.Row="4" Text="Endpoint" VerticalAlignment="Center" Margin="2" />
                                    <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding VoiceEndpointsVM.SelectedVoiceEndpoint.Endpoint}" Margin="2"/>
                                    <UniformGrid HorizontalAlignment="Right" Rows="1" Grid.Row="5" Grid.ColumnSpan="2" Margin="4">
                                        <Button Grid.Row="5" Grid.Column="1" HorizontalAlignment="Center" Padding="4,2" Margin="2" Content="Update" Width="60" Command="{Binding VoiceEndpointsVM.UpdateConfigCommand}" />
                                        <Button Grid.Row="5" Grid.Column="1" HorizontalAlignment="Center" Padding="4,2" Margin="2" Content="Delete" Width="60" Command="{Binding VoiceEndpointsVM.DeleteConfigCommand}" />
                                        <Button Grid.Row="5" Grid.Column="1" HorizontalAlignment="Center" Padding="4,2" Margin="2" Content="Add" Width="60" Command="{Binding VoiceEndpointsVM.NewConfigSaveCommand}" />
                                    </UniformGrid>
                                </Grid>
                                <Button Margin="10,0,10,10" Content="Text To Speech" Command="{Binding GenerateSpeechCommand}" HorizontalAlignment="Left" Padding="8,4" />
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Generate Subtitle file">
                            <StackPanel>
                                <TextBlock Margin="4" Text="This feature will export the approved text parts as a TTML subtitle file, which you can add to a video. The built-in Windows 10 'Films &amp; TV' App has an option to do this." TextWrapping="Wrap"/>
                                <Button Margin="10" Content="Export text to a TTML file" Command="{Binding GenerateTTMLCommand}" HorizontalAlignment="Left" Padding="8,4" />
                            </StackPanel>
                        </TabItem>
                    </TabControl>
                </Expander>

                <Grid x:Name="Slider" Grid.Row="2" Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Speed: " VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Column="1" Text="{Binding Value, ElementName=sldScale, StringFormat=N2}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Slider x:Name="sldScale" Grid.Column="2" Margin="2" TickPlacement="BottomRight" TickFrequency="0.02" Minimum="0.1" Maximum="0.5" Value="{Binding Scale, Mode=TwoWay, NotifyOnTargetUpdated=True}" />

                    <TextBlock Grid.Column="3" Text="Gain: " VerticalAlignment="Center" HorizontalAlignment="Right" />
                    <TextBlock Grid.Column="4" Text="{Binding Value, ElementName=sldGain, StringFormat=N2}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Slider Grid.Column="5" x:Name="sldGain" Margin="2" TickFrequency="0.2" TickPlacement="BottomRight" Minimum="0.2" Maximum="2" Value="{Binding Gain, Mode=TwoWay, NotifyOnTargetUpdated=True}" />
                </Grid>

                <ItemsControl x:Name="lstSnippets" ScrollViewer.HorizontalScrollBarVisibility="Hidden" Grid.Row="3" ItemsSource="{Binding SelectedProject.Snippets}" HorizontalAlignment="Stretch" Margin="10" >
                    <ItemsControl.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="IsSelected"
                                    Value="{Binding IsSelected, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
                        </Style>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemTemplate>
                        <!--Template for each SNIPPET -->
                        <DataTemplate>
                            <Border BorderBrush="Black" BorderThickness="1" Margin="5,0,5,20">
                                <Grid>
                                    <Grid.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="Margin" Value="2"/>
                                        </Style>
                                        <Style TargetType="RepeatButton">
                                            <Setter Property="Margin" Value="2"/>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <CheckBox IsChecked="{Binding IsDrawn, Mode=TwoWay}" Content="Show snippet" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-2,-15,0,0"/>

                                    <StackPanel Visibility="{Binding IsDrawn, Converter={StaticResource VisibilityConverter}}" Margin="2,2,4,2" Panel.ZIndex="999">
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="Pts: "/>
                                                    <TextBlock x:Name="txtPoints" Text="{Binding PointsCount, FallbackValue='N/A'}"/>
                                                </StackPanel>
                                                <!--<StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Dur: "/>
                                            <TextBlock x:Name="txtDuration" Text="{Binding Duration, FallbackValue=0}"/>
                                        </StackPanel>-->
                                            </StackPanel>
                                            <Button Content="Play" Command="{Binding TrackStartCommand}" FontSize="9"/>
                                            <Button Content="Pause/Resume" Click="btnPauseClick" FontSize="9" />
                                            <!--<Button Content="Stop" Click="btnStopClick" FontSize="9"/>-->
                                            <Button Content="Group selected" Click="btnMergeClick" FontSize="9" />
                                            <Button Content="Add space before" Click="btnRightSpacerClick" FontSize="9" />
                                            <Button Content="Delete selected..." Command="{Binding SelectedDeleteCommand}" FontSize="9"/>

                                            <UniformGrid Columns="4">
                                                <!--<TextBlock Text="&lt;-"/>
                                                <RepeatButton Height="14" Padding="0,-2,0,0" Content="&lt;&gt;" Command="{Binding AdjustSelectedCommand}" CommandParameter="LONG/10" FontSize="9" />
                                                <RepeatButton Height="14" Padding="0,-2,0,0" Content="&lt;&lt;&gt;&gt;" Command="{Binding AdjustSelectedCommand}" CommandParameter="LONG/30" FontSize="9" />
                                                <CheckBox IsChecked="{Binding ChangeTimeWithSize, Mode=OneWayToSource}"/>
                                                <RepeatButton Height="14" Padding="0,-2,0,0" Content="&gt;&lt;" Command="{Binding AdjustSelectedCommand}" CommandParameter="LONG/-10" FontSize="9" />
                                                <RepeatButton Height="14" Padding="0,-2,0,0" Content="&gt;&gt;&lt;&lt;" Command="{Binding AdjustSelectedCommand}" CommandParameter="LONG/-30" FontSize="9" />
                                                <TextBlock/>-->
                                                <RepeatButton Height="14" Padding="0,-2,0,0" Content="&lt;&lt;" Command="{Binding AdjustSelectedCommand}" CommandParameter="POS/-30" FontSize="9" />
                                                <RepeatButton Height="14" Padding="0,-2,0,0" Content="&lt;" Command="{Binding AdjustSelectedCommand}" CommandParameter="POS/-10" FontSize="9" />
                                                <RepeatButton Height="14" Padding="0,-2,0,0" Content="&gt;" Command="{Binding AdjustSelectedCommand}" CommandParameter="POS/10" FontSize="9" />
                                                <RepeatButton Height="14" Padding="0,-2,0,0" Content="&gt;&gt;" Command="{Binding AdjustSelectedCommand}" CommandParameter="POS/30" FontSize="9" />
                                            </UniformGrid>
                                        </StackPanel>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="PtFrq:  " VerticalAlignment="Center"/>
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" x:Name="txtPtFreq" Text="{Binding SampledFrequency, FallbackValue='N/A'}"/>
                                            <Button Grid.Column="2" Command="{Binding ShowStatsCommand}" Content="i"/>
                                        </Grid>
                                    </StackPanel>
                                    <StackPanel Visibility="{Binding IsDrawnInverted, Converter={StaticResource VisibilityConverter}}" Orientation="Horizontal" VerticalAlignment="Bottom">
                                        <TextBlock Text="OK" Margin="1,1,4,1" Background="LightGreen" Visibility="{Binding WorkReport.HasApproved, Converter={StaticResource VisibilityConverter}}"/>
                                        <TextBlock Text="{Binding WorkReport.TotalApproved}" Margin="1,1,2,1"/>
                                        <TextBlock Text="/" Margin="1,1,2,1" />
                                        <TextBlock Text="{Binding WorkReport.TotalParts}" Margin="1,1,1,1"/>
                                    </StackPanel>

                                    <ScrollViewer Grid.Column="1" Width="{Binding Path=Width, ElementName=ctrlMain, Converter={StaticResource ResourceKey=ListViewMaxWidthConverter}}" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" MouseMove="TextChangeMouseMoveEvent" MouseLeave="MouseLeftButtLeave" MouseLeftButtonUp="MouseLeftButtUp" >
                                        <Grid Background="White" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <local:PolygonWaveFormControl MarkerRectangle="{Binding MarkerRectangle}"  Margin="0,0,0,0" Height="80" Background="White" Visibility="{Binding IsDrawn, Converter={StaticResource VisibilityConverter}}" Width="{Binding VisualWidth}" Grid.Column="1" SampleAggregator="{Binding Aggregator}" IsEnabled="True" Duration="{Binding Duration}" HorizontalAlignment="Left" />

                                            <Rectangle IsHitTestVisible="False" x:Name="recMarker" Width="3" Fill="Black" Opacity="0.6" VerticalAlignment="Stretch" HorizontalAlignment="Left" Panel.ZIndex="998">
                                                <Rectangle.Tag>
                                                    <MultiBinding Converter="{StaticResource PassSelfToDataContextHackConverter}" >
                                                        <Binding />
                                                        <Binding RelativeSource="{RelativeSource Self}"/>
                                                    </MultiBinding>
                                                </Rectangle.Tag>
                                                <Rectangle.RenderTransform>
                                                    <TranslateTransform x:Name="ttMarker"/>
                                                </Rectangle.RenderTransform>
                                            </Rectangle>

                                            <ListBox x:Name="lstWords" RequestBringIntoView="evtBringIntoView" Visibility="{Binding IsDrawn, Converter={StaticResource VisibilityConverter}}" Grid.Row="1" SelectionMode="Extended" ScrollViewer.PanningMode="None" ItemsSource="{Binding TextParts}" HorizontalAlignment="Stretch" helpers:Ex.SelectedItems="{Binding SelectedTextParts, Mode=TwoWay}" RenderTransformOrigin="0,0.1">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <Grid Margin="-1,0,0,-1" IsItemsHost="True" HorizontalAlignment="Stretch" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                        <Setter Property="Padding" Value="0" />
                                                        <Setter Property="Opacity" Value="0.8" />
                                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                                        <Setter Property="RenderTransformOrigin" Value="0,0.5"/>
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <TranslateTransform>
                                                                    <TranslateTransform.X>
                                                                        <MultiBinding Converter="{StaticResource LeftMarginConverter}" ConverterParameter="test" >
                                                                            <Binding Path="DataContext.StartMills" RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=FrameworkElement}" />
                                                                            <Binding Path="DataContext.Scale" ElementName="sldGain" />
                                                                        </MultiBinding>
                                                                    </TranslateTransform.X>
                                                                </TranslateTransform>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border Margin="-1" BorderThickness="1" BorderBrush="Gray" CornerRadius="2" Height="60">
                                                            <Border.Width>
                                                                <MultiBinding Converter="{StaticResource WidthScaleConverter}" >
                                                                    <Binding Path="TextWidth" />
                                                                    <Binding Path="DataContext.Scale" ElementName="sldGain" />
                                                                </MultiBinding>
                                                            </Border.Width>
                                                            <Grid VerticalAlignment="Top">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                    <RowDefinition/>
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="5"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="5"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid Grid.ColumnSpan="10" Grid.RowSpan="10" Background="Black" Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}"/>
                                                                <Grid Grid.ColumnSpan="10" Opacity="0.6" Grid.RowSpan="10" Background="LightGreen" Visibility="{Binding IsOK, Converter={StaticResource VisibilityConverter}}"/>
                                                                <Rectangle Width="5" VerticalAlignment="Stretch" Fill="Black" MouseLeftButtonDown="StartThumbMouseDown" Cursor="ScrollWE" ToolTip="Adjust start &amp; length"/>
                                                                <Rectangle Width="5" Grid.Column="3" VerticalAlignment="Stretch" Fill="Black" MouseLeftButtonDown="EndThumbMouseDown" Cursor="ScrollWE" ToolTip="Adjust end &amp; length"/>
                                                                <!--<RepeatButton ToolTip="Shorter" Margin="2" Command="{Binding MakeShorterCommand}" VerticalAlignment="Stretch" FontFamily="Courier" Content="-" Style="{x:Null}" />
                                                                <RepeatButton ToolTip="Longer" Margin="2" Grid.Column="1" Command="{Binding MakeLongerCommand}" VerticalAlignment="Stretch"  FontFamily="Courier" Content="+" />-->
                                                                <TextBox FontSize="11" Background="#DDFFFFFF" ToolTip="The spoken text" Grid.Column="1" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Courier" >
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="TextChanged">
                                                                            <cmd:EventToCommand Command="{Binding DataContext.TextPartTextChangedCommand,  
                                                                                  ElementName=lstWords,  Mode=OneWay}" 
                                                                                  PassEventArgsToCommand="True" />
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                </TextBox>
                                                                <!--<TextBox ToolTip="Duration (Milliseconds)" Grid.ColumnSpan="10" Grid.Row="1" Text="{Binding TextWidth, StringFormat=N1}" HorizontalAlignment="Left"/>
                                                                <TextBox ToolTip="Start Time (Milliseconds)" Grid.ColumnSpan="10" Grid.Row="1" Text="{Binding StartMills, StringFormat=N1}" HorizontalAlignment="Right"/>-->
                                                                <StackPanel HorizontalAlignment="Center" Grid.Row="1" Orientation="Horizontal" Grid.ColumnSpan="10">
                                                                    <Button Margin="2" Content="@" Command="{Binding DataContext.PlayThisBitCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" CommandParameter="{Binding}" HorizontalAlignment="Center"/>
                                                                    <CheckBox VerticalAlignment="Center" Margin="2" IsChecked="{Binding IsOK, Mode=TwoWay}" ToolTip="This textpart is correct" />
                                                                </StackPanel>
                                                            </Grid>
                                                        </Border>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>

                                            <TextBox Text="{Binding FullText, Mode=OneWay}" Margin="0,0,0,5" Grid.Row="2" IsReadOnly="True" >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <cmd:EventToCommand Command="{Binding DataContext.SelectionChangedCommand,  
                                                                                  ElementName=lstWords,  Mode=OneWay}" 
                                                                                  PassEventArgsToCommand="True" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                            <!--<ItemsControl ItemsSource="{Binding TextParts}" Margin="0,0,0,5" Grid.Row="2">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Margin="10,0,0,0" IsItemsHost="True" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Text}" Margin="2,2,8,2"/>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>-->

                                            <UniformGrid Columns="3" Panel.ZIndex="999" Grid.ColumnSpan="10" Grid.RowSpan="10" Background="#55FFFFFF" Visibility="{Binding ShowWait, Converter={StaticResource VisibilityConverter}}">
                                                <TextBlock Margin="30" HorizontalAlignment="Left" FontSize="30" FontWeight="Bold" Text="Updating..." VerticalAlignment="Center" />
                                                <TextBlock Margin="30" HorizontalAlignment="Center" FontSize="30" FontWeight="Bold" Text="Updating..." VerticalAlignment="Center" />
                                                <TextBlock Margin="30" HorizontalAlignment="Right" FontSize="30" FontWeight="Bold" Text="Updating..." VerticalAlignment="Center" />
                                            </UniformGrid>

                                            <MediaElement LoadedBehavior="Manual" Source="{Binding FilePath, Mode=OneWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, FallbackValue={x:Null}}" 
                                                Width="20" Height="20"
                                                TargetUpdated="OnTargetUpdated" 
                                                MediaEnded="OnMediaEnded"
                                                Loaded="OnLoaded"/>

                                        </Grid>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!--<StackPanel Grid.Row="4" Orientation="Horizontal">
                    <Button Width="100" Margin="10" Content="-" Click="btnSmallerClick"/>
                    <Button Width="100" Margin="10" Content="+" Click="btnLargerClick"/>
                </StackPanel>-->
                <!--<StackPanel  Grid.Row="5" Orientation="Horizontal" VerticalAlignment="Top">
                    <Button Margin="10" Content="Load test file" Click="Test_Click" Width="150" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    <Button Margin="10" Content="Save as new project" Click="Save_Click" Width="150" VerticalAlignment="Top" HorizontalAlignment="Left"/>-->
                <!--</StackPanel>-->

            </Grid>

        </ScrollViewer>

        <Grid Grid.Row="1" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <UniformGrid Rows="1" HorizontalAlignment="Right">
                <Button Margin="10" Content="Delete project" HorizontalAlignment="Left" Command="{Binding DeleteProjectCommand}" Padding="8,4" VerticalAlignment="Top" />
                <Button Margin="10" Content="Show settings" Command="{Binding ShowSettingsCommand}" Padding="8,4" VerticalAlignment="Top" />
            </UniformGrid>
            <UniformGrid Grid.Column="1" Rows="1" HorizontalAlignment="Right">
                <Button Margin="10" Content="Save changes" Command="{Binding SaveChangesCommand}" Padding="8,4" VerticalAlignment="Top" />
            </UniformGrid>
        </Grid>

        <TextBlock Grid.Row="2" TextWrapping="Wrap" Padding="10" Text="{Binding ProgressingInfo, FallbackValue='Waiting...'}"/>

        <Grid Grid.RowSpan="10" Background="#CCFFFFFF" Visibility="{Binding LockUserInterface, Converter={StaticResource VisibilityConverter}, FallbackValue=Collapsed}" >
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Width="500">
                <TextBlock TextWrapping="Wrap" Padding="10" Text="{Binding ProgressingInfo}" FontWeight="Bold"/>
            </StackPanel>
            <Grid Background="White" Width="500" MinHeight="20" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsTranscribing, Converter={StaticResource VisibilityConverter}, FallbackValue=Collapsed}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Content="STOP" VerticalAlignment="Center" Command="{Binding StopTranscribeCommand}" Padding="5" FontWeight="Bold" />
                <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock TextWrapping="Wrap" Padding="10" Text="{Binding TranscribeInfo}" FontWeight="Bold"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
